/*
 * Generated by Digital. Don't modify this file!
 * Any changes will be lost if this file is regenerated.
 */

module DIG_Counter_Nbit
#(
    parameter Bits = 2
)
(
    output [(Bits-1):0] out,
    output ovf,
    input C,
    input en,
    input clr
);
    reg [(Bits-1):0] count;

    always @ (posedge C) begin
        if (clr)
          count <= 'h0;
        else if (en)
          count <= count + 1'b1;
    end

    assign out = count;
    assign ovf = en? &count : 1'b0;

    initial begin
        count = 'h0;
    end
endmodule


module CompUnsigned #(
    parameter Bits = 1
)
(
    input [(Bits -1):0] a,
    input [(Bits -1):0] b,
    output \> ,
    output \= ,
    output \<
);
    assign \> = a > b;
    assign \= = a == b;
    assign \< = a < b;
endmodule


module final_checker_gen0 (
  input C,
  output out
);
  wire s0;
  wire [31:0] s1;
  wire s2;
  wire s3;
  wire s4;
  wire s5;
  DIG_Counter_Nbit #(
    .Bits(32)
  )
  DIG_Counter_Nbit_i0 (
    .en( s0 ),
    .C( C ),
    .clr( 1'b0 ),
    .out( s1 ),
    .ovf( s2 )
  );
  CompUnsigned #(
    .Bits(32)
  )
  CompUnsigned_i1 (
    .a( 32'b1000 ),
    .b( s1 ),
    .\> ( s3 ),
    .\= ( s4 ),
    .\< ( s5 )
  );
  assign s0 = (s3 & 1'b1);
  assign out = (s4 | s5);
endmodule
module LUT_LUT (
    input \0 ,
    input \1 ,
    output reg  [31:0]  out
);
    reg [31:0] my_lut [0:3];
    wire [1:0] temp;
    assign temp = {\1 , \0 };

    always @ (*) begin
       out = my_lut[temp];
    end

    initial begin
        my_lut[0] = 32'h7ffffff1;
        my_lut[1] = 32'h0;
        my_lut[2] = 32'h0;
        my_lut[3] = 32'h0;
    end
endmodule


module Mux_2x1_NBits #(
    parameter Bits = 2
)
(
    input [0:0] sel,
    input [(Bits - 1):0] in_0,
    input [(Bits - 1):0] in_1,
    output reg [(Bits - 1):0] out
);
    always @ (*) begin
        case (sel)
            1'h0: out = in_0;
            1'h1: out = in_1;
            default:
                out = 'h0;
        endcase
    end
endmodule


module cheapSelector (
  input [31:0] a,
  input [31:0] b,
  output [31:0] out
);
  wire s0;
  wire s1;
  wire s2;
  wire s3;
  CompUnsigned #(
    .Bits(32)
  )
  CompUnsigned_i0 (
    .a( a ),
    .b( b ),
    .\> ( s1 ),
    .\= ( s2 ),
    .\< ( s3 )
  );
  assign s0 = (s1 | s2);
  Mux_2x1_NBits #(
    .Bits(32)
  )
  Mux_2x1_NBits_i1 (
    .sel( s0 ),
    .in_0( a ),
    .in_1( b ),
    .out( out )
  );
endmodule

module wires_in_gen0 (
  input [31:0] in_0,
  input [31:0] I1,
  output [31:0] out
);
  cheapSelector cheapSelector_i0 (
    .a( in_0 ),
    .b( I1 ),
    .out( out )
  );
endmodule
module DIG_D_FF_Nbit
#(
    parameter Bits = 2,
    parameter Default = 0
)
(
   input [(Bits-1):0] D,
   input C,
   output [(Bits-1):0] Q,
   output [(Bits-1):0] \~Q
);
    reg [(Bits-1):0] state;

    assign Q = state;
    assign \~Q = ~state;

    always @ (posedge C) begin
        state <= D;
    end

    initial begin
        state = Default;
    end
endmodule


module decreasing_mem (
  input clock,
  input [31:0] A,
  output [31:0] \output 
);
  wire [31:0] output_temp;
  wire s0;
  wire s1;
  wire s2;
  wire [31:0] s3;
  wire [31:0] s4;
  // comp
  CompUnsigned #(
    .Bits(32)
  )
  CompUnsigned_i0 (
    .a( A ),
    .b( output_temp ),
    .\> ( s0 ),
    .\= ( s1 ),
    .\< ( s2 )
  );
  Mux_2x1_NBits #(
    .Bits(32)
  )
  Mux_2x1_NBits_i1 (
    .sel( s2 ),
    .in_0( output_temp ),
    .in_1( A ),
    .out( s3 )
  );
  // mem
  DIG_D_FF_Nbit #(
    .Bits(32),
    .Default(2147483647)
  )
  DIG_D_FF_Nbit_i2 (
    .D( s3 ),
    .C( clock ),
    .Q( output_temp ),
    .\~Q ( s4 )
  );
  assign \output  = output_temp;
endmodule
module DIG_Add
#(
    parameter Bits = 1
)
(
    input [(Bits-1):0] a,
    input [(Bits-1):0] b,
    input c_i,
    output [(Bits - 1):0] s,
    output c_o
);
   wire [Bits:0] temp;

   assign temp = a + b + c_i;
   assign s = temp [(Bits-1):0];
   assign c_o = temp[Bits];
endmodule



module wires_out_gen0 (
  input [31:0] IN1,
  output [31:0] O0,
  output [31:0] O1
);
  wire s0;
  wire s1;
  DIG_Add #(
    .Bits(32)
  )
  DIG_Add_i0 (
    .a( IN1 ),
    .b( 32'b100 ),
    .c_i( 1'b0 ),
    .s( O0 ),
    .c_o( s0 )
  );
  DIG_Add #(
    .Bits(32)
  )
  DIG_Add_i1 (
    .a( IN1 ),
    .b( 32'b1000 ),
    .c_i( 1'b0 ),
    .s( O1 ),
    .c_o( s1 )
  );
endmodule

module node_module_gen0 (
  input start,
  input clock,
  input [31:0] I0,
  input [31:0] I1,
  output [31:0] own,
  output [31:0] O0,
  output [31:0] O1
);
  wire [31:0] s0;
  wire [31:0] s1;
  wire [31:0] s2;
  wire [31:0] own_temp;
  // LUT
  LUT_LUT LUT_LUT_i0 (
    .\0 ( start ),
    .\1 ( start ),
    .out( s0 )
  );
  wires_in_gen0 wires_in_gen0_i1 (
    .in_0( I0 ),
    .I1( I1 ),
    .out( s1 )
  );
  cheapSelector cheapSelector_i2 (
    .a( s0 ),
    .b( s1 ),
    .out( s2 )
  );
  decreasing_mem decreasing_mem_i3 (
    .clock( clock ),
    .A( s2 ),
    .\output ( own_temp )
  );
  wires_out_gen0 wires_out_gen0_i4 (
    .IN1( own_temp ),
    .O0( O0 ),
    .O1( O1 )
  );
  assign own = own_temp;
endmodule

module wires_in_gen1 (
  input [31:0] in_0,
  input [31:0] I1,
  input [31:0] I2,
  output [31:0] out
);
  wire [31:0] s0;
  cheapSelector cheapSelector_i0 (
    .a( in_0 ),
    .b( I1 ),
    .out( s0 )
  );
  cheapSelector cheapSelector_i1 (
    .a( s0 ),
    .b( I2 ),
    .out( out )
  );
endmodule

module wires_out_gen1 (
  input [31:0] IN1,
  output [31:0] O0,
  output [31:0] O1,
  output [31:0] O2
);
  wire s0;
  wire s1;
  wire s2;
  DIG_Add #(
    .Bits(32)
  )
  DIG_Add_i0 (
    .a( IN1 ),
    .b( 32'b100 ),
    .c_i( 1'b0 ),
    .s( O0 ),
    .c_o( s0 )
  );
  DIG_Add #(
    .Bits(32)
  )
  DIG_Add_i1 (
    .a( IN1 ),
    .b( 32'b1000 ),
    .c_i( 1'b0 ),
    .s( O1 ),
    .c_o( s1 )
  );
  DIG_Add #(
    .Bits(32)
  )
  DIG_Add_i2 (
    .a( IN1 ),
    .b( 32'b1011 ),
    .c_i( 1'b0 ),
    .s( O2 ),
    .c_o( s2 )
  );
endmodule

module node_module_gen1 (
  input start,
  input clock,
  input [31:0] I0,
  input [31:0] I1,
  input [31:0] I2,
  output [31:0] own,
  output [31:0] O0,
  output [31:0] O1,
  output [31:0] O2
);
  wire [31:0] s0;
  wire [31:0] s1;
  wire [31:0] s2;
  wire [31:0] own_temp;
  // LUT
  LUT_LUT LUT_LUT_i0 (
    .\0 ( start ),
    .\1 ( start ),
    .out( s0 )
  );
  wires_in_gen1 wires_in_gen1_i1 (
    .in_0( I0 ),
    .I1( I1 ),
    .I2( I2 ),
    .out( s1 )
  );
  cheapSelector cheapSelector_i2 (
    .a( s0 ),
    .b( s1 ),
    .out( s2 )
  );
  decreasing_mem decreasing_mem_i3 (
    .clock( clock ),
    .A( s2 ),
    .\output ( own_temp )
  );
  wires_out_gen1 wires_out_gen1_i4 (
    .IN1( own_temp ),
    .O0( O0 ),
    .O1( O1 ),
    .O2( O2 )
  );
  assign own = own_temp;
endmodule

module wires_in_gen2 (
  input [31:0] in_0,
  input [31:0] I1,
  input [31:0] I2,
  input [31:0] I3,
  output [31:0] out
);
  wire [31:0] s0;
  wire [31:0] s1;
  cheapSelector cheapSelector_i0 (
    .a( in_0 ),
    .b( I1 ),
    .out( s0 )
  );
  cheapSelector cheapSelector_i1 (
    .a( s0 ),
    .b( I2 ),
    .out( s1 )
  );
  cheapSelector cheapSelector_i2 (
    .a( s1 ),
    .b( I3 ),
    .out( out )
  );
endmodule

module wires_out_gen2 (
  input [31:0] IN1,
  output [31:0] O0,
  output [31:0] O1,
  output [31:0] O2,
  output [31:0] O3
);
  wire s0;
  wire s1;
  wire s2;
  wire s3;
  DIG_Add #(
    .Bits(32)
  )
  DIG_Add_i0 (
    .a( IN1 ),
    .b( 32'b1000 ),
    .c_i( 1'b0 ),
    .s( O0 ),
    .c_o( s0 )
  );
  DIG_Add #(
    .Bits(32)
  )
  DIG_Add_i1 (
    .a( IN1 ),
    .b( 32'b111 ),
    .c_i( 1'b0 ),
    .s( O1 ),
    .c_o( s1 )
  );
  DIG_Add #(
    .Bits(32)
  )
  DIG_Add_i2 (
    .a( IN1 ),
    .b( 32'b100 ),
    .c_i( 1'b0 ),
    .s( O2 ),
    .c_o( s2 )
  );
  DIG_Add #(
    .Bits(32)
  )
  DIG_Add_i3 (
    .a( IN1 ),
    .b( 32'b10 ),
    .c_i( 1'b0 ),
    .s( O3 ),
    .c_o( s3 )
  );
endmodule

module node_module_gen2 (
  input start,
  input clock,
  input [31:0] I0,
  input [31:0] I1,
  input [31:0] I2,
  input [31:0] I3,
  output [31:0] own,
  output [31:0] O0,
  output [31:0] O1,
  output [31:0] O2,
  output [31:0] O3
);
  wire [31:0] s0;
  wire [31:0] s1;
  wire [31:0] s2;
  wire [31:0] own_temp;
  // LUT
  LUT_LUT LUT_LUT_i0 (
    .\0 ( start ),
    .\1 ( start ),
    .out( s0 )
  );
  wires_in_gen2 wires_in_gen2_i1 (
    .in_0( I0 ),
    .I1( I1 ),
    .I2( I2 ),
    .I3( I3 ),
    .out( s1 )
  );
  cheapSelector cheapSelector_i2 (
    .a( s0 ),
    .b( s1 ),
    .out( s2 )
  );
  decreasing_mem decreasing_mem_i3 (
    .clock( clock ),
    .A( s2 ),
    .\output ( own_temp )
  );
  wires_out_gen2 wires_out_gen2_i4 (
    .IN1( own_temp ),
    .O0( O0 ),
    .O1( O1 ),
    .O2( O2 ),
    .O3( O3 )
  );
  assign own = own_temp;
endmodule

module wires_in_gen3 (
  input [31:0] in_0,
  input [31:0] I1,
  input [31:0] I2,
  output [31:0] out
);
  wire [31:0] s0;
  cheapSelector cheapSelector_i0 (
    .a( in_0 ),
    .b( I1 ),
    .out( s0 )
  );
  cheapSelector cheapSelector_i1 (
    .a( s0 ),
    .b( I2 ),
    .out( out )
  );
endmodule

module wires_out_gen3 (
  input [31:0] IN1,
  output [31:0] O0,
  output [31:0] O1,
  output [31:0] O2
);
  wire s0;
  wire s1;
  wire s2;
  DIG_Add #(
    .Bits(32)
  )
  DIG_Add_i0 (
    .a( IN1 ),
    .b( 32'b111 ),
    .c_i( 1'b0 ),
    .s( O0 ),
    .c_o( s0 )
  );
  DIG_Add #(
    .Bits(32)
  )
  DIG_Add_i1 (
    .a( IN1 ),
    .b( 32'b1001 ),
    .c_i( 1'b0 ),
    .s( O1 ),
    .c_o( s1 )
  );
  DIG_Add #(
    .Bits(32)
  )
  DIG_Add_i2 (
    .a( IN1 ),
    .b( 32'b1110 ),
    .c_i( 1'b0 ),
    .s( O2 ),
    .c_o( s2 )
  );
endmodule

module node_module_gen3 (
  input start,
  input clock,
  input [31:0] I0,
  input [31:0] I1,
  input [31:0] I2,
  output [31:0] own,
  output [31:0] O0,
  output [31:0] O1,
  output [31:0] O2
);
  wire [31:0] s0;
  wire [31:0] s1;
  wire [31:0] s2;
  wire [31:0] own_temp;
  // LUT
  LUT_LUT LUT_LUT_i0 (
    .\0 ( start ),
    .\1 ( start ),
    .out( s0 )
  );
  wires_in_gen3 wires_in_gen3_i1 (
    .in_0( I0 ),
    .I1( I1 ),
    .I2( I2 ),
    .out( s1 )
  );
  cheapSelector cheapSelector_i2 (
    .a( s0 ),
    .b( s1 ),
    .out( s2 )
  );
  decreasing_mem decreasing_mem_i3 (
    .clock( clock ),
    .A( s2 ),
    .\output ( own_temp )
  );
  wires_out_gen3 wires_out_gen3_i4 (
    .IN1( own_temp ),
    .O0( O0 ),
    .O1( O1 ),
    .O2( O2 )
  );
  assign own = own_temp;
endmodule

module wires_in_gen4 (
  input [31:0] in_0,
  input [31:0] I1,
  output [31:0] out
);
  cheapSelector cheapSelector_i0 (
    .a( in_0 ),
    .b( I1 ),
    .out( out )
  );
endmodule

module wires_out_gen4 (
  input [31:0] IN1,
  output [31:0] O0,
  output [31:0] O1
);
  wire s0;
  wire s1;
  DIG_Add #(
    .Bits(32)
  )
  DIG_Add_i0 (
    .a( IN1 ),
    .b( 32'b1001 ),
    .c_i( 1'b0 ),
    .s( O0 ),
    .c_o( s0 )
  );
  DIG_Add #(
    .Bits(32)
  )
  DIG_Add_i1 (
    .a( IN1 ),
    .b( 32'b1010 ),
    .c_i( 1'b0 ),
    .s( O1 ),
    .c_o( s1 )
  );
endmodule

module node_module_gen4 (
  input start,
  input clock,
  input [31:0] I0,
  input [31:0] I1,
  output [31:0] own,
  output [31:0] O0,
  output [31:0] O1
);
  wire [31:0] s0;
  wire [31:0] s1;
  wire [31:0] s2;
  wire [31:0] own_temp;
  // LUT
  LUT_LUT LUT_LUT_i0 (
    .\0 ( start ),
    .\1 ( start ),
    .out( s0 )
  );
  wires_in_gen4 wires_in_gen4_i1 (
    .in_0( I0 ),
    .I1( I1 ),
    .out( s1 )
  );
  cheapSelector cheapSelector_i2 (
    .a( s0 ),
    .b( s1 ),
    .out( s2 )
  );
  decreasing_mem decreasing_mem_i3 (
    .clock( clock ),
    .A( s2 ),
    .\output ( own_temp )
  );
  wires_out_gen4 wires_out_gen4_i4 (
    .IN1( own_temp ),
    .O0( O0 ),
    .O1( O1 )
  );
  assign own = own_temp;
endmodule

module wires_in_gen5 (
  input [31:0] in_0,
  input [31:0] I1,
  input [31:0] I2,
  input [31:0] I3,
  output [31:0] out
);
  wire [31:0] s0;
  wire [31:0] s1;
  cheapSelector cheapSelector_i0 (
    .a( in_0 ),
    .b( I1 ),
    .out( s0 )
  );
  cheapSelector cheapSelector_i1 (
    .a( s0 ),
    .b( I2 ),
    .out( s1 )
  );
  cheapSelector cheapSelector_i2 (
    .a( s1 ),
    .b( I3 ),
    .out( out )
  );
endmodule

module wires_out_gen5 (
  input [31:0] IN1,
  output [31:0] O0,
  output [31:0] O1,
  output [31:0] O2,
  output [31:0] O3
);
  wire s0;
  wire s1;
  wire s2;
  wire s3;
  DIG_Add #(
    .Bits(32)
  )
  DIG_Add_i0 (
    .a( IN1 ),
    .b( 32'b100 ),
    .c_i( 1'b0 ),
    .s( O0 ),
    .c_o( s0 )
  );
  DIG_Add #(
    .Bits(32)
  )
  DIG_Add_i1 (
    .a( IN1 ),
    .b( 32'b1110 ),
    .c_i( 1'b0 ),
    .s( O1 ),
    .c_o( s1 )
  );
  DIG_Add #(
    .Bits(32)
  )
  DIG_Add_i2 (
    .a( IN1 ),
    .b( 32'b1010 ),
    .c_i( 1'b0 ),
    .s( O2 ),
    .c_o( s2 )
  );
  DIG_Add #(
    .Bits(32)
  )
  DIG_Add_i3 (
    .a( IN1 ),
    .b( 32'b10 ),
    .c_i( 1'b0 ),
    .s( O3 ),
    .c_o( s3 )
  );
endmodule

module node_module_gen5 (
  input start,
  input clock,
  input [31:0] I0,
  input [31:0] I1,
  input [31:0] I2,
  input [31:0] I3,
  output [31:0] own,
  output [31:0] O0,
  output [31:0] O1,
  output [31:0] O2,
  output [31:0] O3
);
  wire [31:0] s0;
  wire [31:0] s1;
  wire [31:0] s2;
  wire [31:0] own_temp;
  // LUT
  LUT_LUT LUT_LUT_i0 (
    .\0 ( start ),
    .\1 ( start ),
    .out( s0 )
  );
  wires_in_gen5 wires_in_gen5_i1 (
    .in_0( I0 ),
    .I1( I1 ),
    .I2( I2 ),
    .I3( I3 ),
    .out( s1 )
  );
  cheapSelector cheapSelector_i2 (
    .a( s0 ),
    .b( s1 ),
    .out( s2 )
  );
  decreasing_mem decreasing_mem_i3 (
    .clock( clock ),
    .A( s2 ),
    .\output ( own_temp )
  );
  wires_out_gen5 wires_out_gen5_i4 (
    .IN1( own_temp ),
    .O0( O0 ),
    .O1( O1 ),
    .O2( O2 ),
    .O3( O3 )
  );
  assign own = own_temp;
endmodule

module wires_in_gen6 (
  input [31:0] in_0,
  input [31:0] I1,
  input [31:0] I2,
  output [31:0] out
);
  wire [31:0] s0;
  cheapSelector cheapSelector_i0 (
    .a( in_0 ),
    .b( I1 ),
    .out( s0 )
  );
  cheapSelector cheapSelector_i1 (
    .a( s0 ),
    .b( I2 ),
    .out( out )
  );
endmodule

module wires_out_gen6 (
  input [31:0] IN1,
  output [31:0] O0,
  output [31:0] O1,
  output [31:0] O2
);
  wire s0;
  wire s1;
  wire s2;
  DIG_Add #(
    .Bits(32)
  )
  DIG_Add_i0 (
    .a( IN1 ),
    .b( 32'b110 ),
    .c_i( 1'b0 ),
    .s( O0 ),
    .c_o( s0 )
  );
  DIG_Add #(
    .Bits(32)
  )
  DIG_Add_i1 (
    .a( IN1 ),
    .b( 32'b10 ),
    .c_i( 1'b0 ),
    .s( O1 ),
    .c_o( s1 )
  );
  DIG_Add #(
    .Bits(32)
  )
  DIG_Add_i2 (
    .a( IN1 ),
    .b( 32'b1 ),
    .c_i( 1'b0 ),
    .s( O2 ),
    .c_o( s2 )
  );
endmodule

module node_module_gen6 (
  input start,
  input clock,
  input [31:0] I0,
  input [31:0] I1,
  input [31:0] I2,
  output [31:0] own,
  output [31:0] O0,
  output [31:0] O1,
  output [31:0] O2
);
  wire [31:0] s0;
  wire [31:0] s1;
  wire [31:0] s2;
  wire [31:0] own_temp;
  // LUT
  LUT_LUT LUT_LUT_i0 (
    .\0 ( start ),
    .\1 ( start ),
    .out( s0 )
  );
  wires_in_gen6 wires_in_gen6_i1 (
    .in_0( I0 ),
    .I1( I1 ),
    .I2( I2 ),
    .out( s1 )
  );
  cheapSelector cheapSelector_i2 (
    .a( s0 ),
    .b( s1 ),
    .out( s2 )
  );
  decreasing_mem decreasing_mem_i3 (
    .clock( clock ),
    .A( s2 ),
    .\output ( own_temp )
  );
  wires_out_gen6 wires_out_gen6_i4 (
    .IN1( own_temp ),
    .O0( O0 ),
    .O1( O1 ),
    .O2( O2 )
  );
  assign own = own_temp;
endmodule

module wires_in_gen7 (
  input [31:0] in_0,
  input [31:0] I1,
  input [31:0] I2,
  input [31:0] I3,
  output [31:0] out
);
  wire [31:0] s0;
  wire [31:0] s1;
  cheapSelector cheapSelector_i0 (
    .a( in_0 ),
    .b( I1 ),
    .out( s0 )
  );
  cheapSelector cheapSelector_i1 (
    .a( s0 ),
    .b( I2 ),
    .out( s1 )
  );
  cheapSelector cheapSelector_i2 (
    .a( s1 ),
    .b( I3 ),
    .out( out )
  );
endmodule

module wires_out_gen7 (
  input [31:0] IN1,
  output [31:0] O0,
  output [31:0] O1,
  output [31:0] O2,
  output [31:0] O3
);
  wire s0;
  wire s1;
  wire s2;
  wire s3;
  DIG_Add #(
    .Bits(32)
  )
  DIG_Add_i0 (
    .a( IN1 ),
    .b( 32'b1000 ),
    .c_i( 1'b0 ),
    .s( O0 ),
    .c_o( s0 )
  );
  DIG_Add #(
    .Bits(32)
  )
  DIG_Add_i1 (
    .a( IN1 ),
    .b( 32'b1011 ),
    .c_i( 1'b0 ),
    .s( O1 ),
    .c_o( s1 )
  );
  DIG_Add #(
    .Bits(32)
  )
  DIG_Add_i2 (
    .a( IN1 ),
    .b( 32'b111 ),
    .c_i( 1'b0 ),
    .s( O2 ),
    .c_o( s2 )
  );
  DIG_Add #(
    .Bits(32)
  )
  DIG_Add_i3 (
    .a( IN1 ),
    .b( 32'b1 ),
    .c_i( 1'b0 ),
    .s( O3 ),
    .c_o( s3 )
  );
endmodule

module node_module_gen7 (
  input start,
  input clock,
  input [31:0] I0,
  input [31:0] I1,
  input [31:0] I2,
  input [31:0] I3,
  output [31:0] own,
  output [31:0] O0,
  output [31:0] O1,
  output [31:0] O2,
  output [31:0] O3
);
  wire [31:0] s0;
  wire [31:0] s1;
  wire [31:0] s2;
  wire [31:0] own_temp;
  // LUT
  LUT_LUT LUT_LUT_i0 (
    .\0 ( start ),
    .\1 ( start ),
    .out( s0 )
  );
  wires_in_gen7 wires_in_gen7_i1 (
    .in_0( I0 ),
    .I1( I1 ),
    .I2( I2 ),
    .I3( I3 ),
    .out( s1 )
  );
  cheapSelector cheapSelector_i2 (
    .a( s0 ),
    .b( s1 ),
    .out( s2 )
  );
  decreasing_mem decreasing_mem_i3 (
    .clock( clock ),
    .A( s2 ),
    .\output ( own_temp )
  );
  wires_out_gen7 wires_out_gen7_i4 (
    .IN1( own_temp ),
    .O0( O0 ),
    .O1( O1 ),
    .O2( O2 ),
    .O3( O3 )
  );
  assign own = own_temp;
endmodule

module wires_in_gen8 (
  input [31:0] in_0,
  input [31:0] I1,
  input [31:0] I2,
  output [31:0] out
);
  wire [31:0] s0;
  cheapSelector cheapSelector_i0 (
    .a( in_0 ),
    .b( I1 ),
    .out( s0 )
  );
  cheapSelector cheapSelector_i1 (
    .a( s0 ),
    .b( I2 ),
    .out( out )
  );
endmodule

module wires_out_gen8 (
  input [31:0] IN1,
  output [31:0] O0,
  output [31:0] O1,
  output [31:0] O2
);
  wire s0;
  wire s1;
  wire s2;
  DIG_Add #(
    .Bits(32)
  )
  DIG_Add_i0 (
    .a( IN1 ),
    .b( 32'b10 ),
    .c_i( 1'b0 ),
    .s( O0 ),
    .c_o( s0 )
  );
  DIG_Add #(
    .Bits(32)
  )
  DIG_Add_i1 (
    .a( IN1 ),
    .b( 32'b110 ),
    .c_i( 1'b0 ),
    .s( O1 ),
    .c_o( s1 )
  );
  DIG_Add #(
    .Bits(32)
  )
  DIG_Add_i2 (
    .a( IN1 ),
    .b( 32'b111 ),
    .c_i( 1'b0 ),
    .s( O2 ),
    .c_o( s2 )
  );
endmodule

module node_module_gen8 (
  input start,
  input clock,
  input [31:0] I0,
  input [31:0] I1,
  input [31:0] I2,
  output [31:0] own,
  output [31:0] O0,
  output [31:0] O1,
  output [31:0] O2
);
  wire [31:0] s0;
  wire [31:0] s1;
  wire [31:0] s2;
  wire [31:0] own_temp;
  // LUT
  LUT_LUT LUT_LUT_i0 (
    .\0 ( start ),
    .\1 ( start ),
    .out( s0 )
  );
  wires_in_gen8 wires_in_gen8_i1 (
    .in_0( I0 ),
    .I1( I1 ),
    .I2( I2 ),
    .out( s1 )
  );
  cheapSelector cheapSelector_i2 (
    .a( s0 ),
    .b( s1 ),
    .out( s2 )
  );
  decreasing_mem decreasing_mem_i3 (
    .clock( clock ),
    .A( s2 ),
    .\output ( own_temp )
  );
  wires_out_gen8 wires_out_gen8_i4 (
    .IN1( own_temp ),
    .O0( O0 ),
    .O1( O1 ),
    .O2( O2 )
  );
  assign own = own_temp;
endmodule

module comparetoX_gen0 (
  input [31:0] A,
  output Y
);
  wire s0;
  wire s1;
  CompUnsigned #(
    .Bits(32)
  )
  CompUnsigned_i0 (
    .a( A ),
    .b( 32'b0 ),
    .\> ( s0 ),
    .\= ( Y ),
    .\< ( s1 )
  );
endmodule

module comparetoX_gen1 (
  input [31:0] A,
  output Y
);
  wire s0;
  wire s1;
  CompUnsigned #(
    .Bits(32)
  )
  CompUnsigned_i0 (
    .a( A ),
    .b( 32'b1 ),
    .\> ( s0 ),
    .\= ( Y ),
    .\< ( s1 )
  );
endmodule

module comparetoX_gen2 (
  input [31:0] A,
  output Y
);
  wire s0;
  wire s1;
  CompUnsigned #(
    .Bits(32)
  )
  CompUnsigned_i0 (
    .a( A ),
    .b( 32'b10 ),
    .\> ( s0 ),
    .\= ( Y ),
    .\< ( s1 )
  );
endmodule

module comparetoX_gen3 (
  input [31:0] A,
  output Y
);
  wire s0;
  wire s1;
  CompUnsigned #(
    .Bits(32)
  )
  CompUnsigned_i0 (
    .a( A ),
    .b( 32'b11 ),
    .\> ( s0 ),
    .\= ( Y ),
    .\< ( s1 )
  );
endmodule

module comparetoX_gen4 (
  input [31:0] A,
  output Y
);
  wire s0;
  wire s1;
  CompUnsigned #(
    .Bits(32)
  )
  CompUnsigned_i0 (
    .a( A ),
    .b( 32'b100 ),
    .\> ( s0 ),
    .\= ( Y ),
    .\< ( s1 )
  );
endmodule

module comparetoX_gen5 (
  input [31:0] A,
  output Y
);
  wire s0;
  wire s1;
  CompUnsigned #(
    .Bits(32)
  )
  CompUnsigned_i0 (
    .a( A ),
    .b( 32'b101 ),
    .\> ( s0 ),
    .\= ( Y ),
    .\< ( s1 )
  );
endmodule

module comparetoX_gen6 (
  input [31:0] A,
  output Y
);
  wire s0;
  wire s1;
  CompUnsigned #(
    .Bits(32)
  )
  CompUnsigned_i0 (
    .a( A ),
    .b( 32'b110 ),
    .\> ( s0 ),
    .\= ( Y ),
    .\< ( s1 )
  );
endmodule

module comparetoX_gen7 (
  input [31:0] A,
  output Y
);
  wire s0;
  wire s1;
  CompUnsigned #(
    .Bits(32)
  )
  CompUnsigned_i0 (
    .a( A ),
    .b( 32'b111 ),
    .\> ( s0 ),
    .\= ( Y ),
    .\< ( s1 )
  );
endmodule

module comparetoX_gen8 (
  input [31:0] A,
  output Y
);
  wire s0;
  wire s1;
  CompUnsigned #(
    .Bits(32)
  )
  CompUnsigned_i0 (
    .a( A ),
    .b( 32'b1000 ),
    .\> ( s0 ),
    .\= ( Y ),
    .\< ( s1 )
  );
endmodule

module start_finder_gen0 (
  input [31:0] in,
  output out_0,
  output out_1,
  output out_2,
  output out_3,
  output out_4,
  output out_5,
  output out_6,
  output out_7,
  output out_8
);
  comparetoX_gen0 comparetoX_gen0_i0 (
    .A( in ),
    .Y( out_0 )
  );
  comparetoX_gen1 comparetoX_gen1_i1 (
    .A( in ),
    .Y( out_1 )
  );
  comparetoX_gen2 comparetoX_gen2_i2 (
    .A( in ),
    .Y( out_2 )
  );
  comparetoX_gen3 comparetoX_gen3_i3 (
    .A( in ),
    .Y( out_3 )
  );
  comparetoX_gen4 comparetoX_gen4_i4 (
    .A( in ),
    .Y( out_4 )
  );
  comparetoX_gen5 comparetoX_gen5_i5 (
    .A( in ),
    .Y( out_5 )
  );
  comparetoX_gen6 comparetoX_gen6_i6 (
    .A( in ),
    .Y( out_6 )
  );
  comparetoX_gen7 comparetoX_gen7_i7 (
    .A( in ),
    .Y( out_7 )
  );
  comparetoX_gen8 comparetoX_gen8_i8 (
    .A( in ),
    .Y( out_8 )
  );
endmodule

module wires_in_gen9 (
  input [31:0] in_0,
  input [31:0] I1,
  input [31:0] I2,
  input [31:0] I3,
  input [31:0] I4,
  input [31:0] I5,
  input [31:0] I6,
  input [31:0] I7,
  input [31:0] I8,
  output [31:0] out
);
  wire [31:0] s0;
  wire [31:0] s1;
  wire [31:0] s2;
  wire [31:0] s3;
  wire [31:0] s4;
  wire [31:0] s5;
  wire [31:0] s6;
  cheapSelector cheapSelector_i0 (
    .a( in_0 ),
    .b( I1 ),
    .out( s0 )
  );
  cheapSelector cheapSelector_i1 (
    .a( s0 ),
    .b( I2 ),
    .out( s1 )
  );
  cheapSelector cheapSelector_i2 (
    .a( s1 ),
    .b( I3 ),
    .out( s2 )
  );
  cheapSelector cheapSelector_i3 (
    .a( s2 ),
    .b( I4 ),
    .out( s3 )
  );
  cheapSelector cheapSelector_i4 (
    .a( s3 ),
    .b( I5 ),
    .out( s4 )
  );
  cheapSelector cheapSelector_i5 (
    .a( s4 ),
    .b( I6 ),
    .out( s5 )
  );
  cheapSelector cheapSelector_i6 (
    .a( s5 ),
    .b( I7 ),
    .out( s6 )
  );
  cheapSelector cheapSelector_i7 (
    .a( s6 ),
    .b( I8 ),
    .out( out )
  );
endmodule

module final_finder_gen0 (
  input [31:0] \end ,
  input [31:0] in_0,
  input [31:0] in_1,
  input [31:0] in_2,
  input [31:0] in_3,
  input [31:0] in_4,
  input [31:0] in_5,
  input [31:0] in_6,
  input [31:0] in_7,
  input [31:0] in_8,
  output [31:0] out
);
  wire s0;
  wire s1;
  wire s2;
  wire s3;
  wire s4;
  wire s5;
  wire s6;
  wire s7;
  wire s8;
  wire [31:0] s9;
  wire [31:0] s10;
  wire [31:0] s11;
  wire [31:0] s12;
  wire [31:0] s13;
  wire [31:0] s14;
  wire [31:0] s15;
  wire [31:0] s16;
  wire [31:0] s17;
  start_finder_gen0 start_finder_gen0_i0 (
    .in( \end  ),
    .out_0( s0 ),
    .out_1( s1 ),
    .out_2( s2 ),
    .out_3( s3 ),
    .out_4( s4 ),
    .out_5( s5 ),
    .out_6( s6 ),
    .out_7( s7 ),
    .out_8( s8 )
  );
  Mux_2x1_NBits #(
    .Bits(32)
  )
  Mux_2x1_NBits_i1 (
    .sel( s0 ),
    .in_0( 32'b1111111111111111111111111111111 ),
    .in_1( in_0 ),
    .out( s9 )
  );
  Mux_2x1_NBits #(
    .Bits(32)
  )
  Mux_2x1_NBits_i2 (
    .sel( s1 ),
    .in_0( 32'b1111111111111111111111111111111 ),
    .in_1( in_1 ),
    .out( s10 )
  );
  Mux_2x1_NBits #(
    .Bits(32)
  )
  Mux_2x1_NBits_i3 (
    .sel( s2 ),
    .in_0( 32'b1111111111111111111111111111111 ),
    .in_1( in_2 ),
    .out( s11 )
  );
  Mux_2x1_NBits #(
    .Bits(32)
  )
  Mux_2x1_NBits_i4 (
    .sel( s3 ),
    .in_0( 32'b1111111111111111111111111111111 ),
    .in_1( in_3 ),
    .out( s12 )
  );
  Mux_2x1_NBits #(
    .Bits(32)
  )
  Mux_2x1_NBits_i5 (
    .sel( s4 ),
    .in_0( 32'b1111111111111111111111111111111 ),
    .in_1( in_4 ),
    .out( s13 )
  );
  Mux_2x1_NBits #(
    .Bits(32)
  )
  Mux_2x1_NBits_i6 (
    .sel( s5 ),
    .in_0( 32'b1111111111111111111111111111111 ),
    .in_1( in_5 ),
    .out( s14 )
  );
  Mux_2x1_NBits #(
    .Bits(32)
  )
  Mux_2x1_NBits_i7 (
    .sel( s6 ),
    .in_0( 32'b1111111111111111111111111111111 ),
    .in_1( in_6 ),
    .out( s15 )
  );
  Mux_2x1_NBits #(
    .Bits(32)
  )
  Mux_2x1_NBits_i8 (
    .sel( s7 ),
    .in_0( 32'b1111111111111111111111111111111 ),
    .in_1( in_7 ),
    .out( s16 )
  );
  Mux_2x1_NBits #(
    .Bits(32)
  )
  Mux_2x1_NBits_i9 (
    .sel( s8 ),
    .in_0( 32'b1111111111111111111111111111111 ),
    .in_1( in_8 ),
    .out( s17 )
  );
  wires_in_gen9 wires_in_gen9_i10 (
    .in_0( s9 ),
    .I1( s10 ),
    .I2( s11 ),
    .I3( s12 ),
    .I4( s13 ),
    .I5( s14 ),
    .I6( s15 ),
    .I7( s16 ),
    .I8( s17 ),
    .out( out )
  );
endmodule

module example (
  input clock,
  input [31:0] VT,
  input V0,
  input V1,
  input V2,
  input V3,
  input V5,
  input V6,
  input V7,
  input V8,
  input V4,
  input start,
  output [31:0] SP
);
  wire s0;
  wire [31:0] s1;
  wire [31:0] s2;
  wire [31:0] s3;
  wire [31:0] s4;
  wire [31:0] s5;
  wire [31:0] s6;
  wire [31:0] s7;
  wire [31:0] s8;
  wire [31:0] s9;
  wire [31:0] s10;
  wire [31:0] s11;
  wire [31:0] s12;
  wire [31:0] s13;
  wire [31:0] s14;
  wire [31:0] s15;
  wire [31:0] s16;
  wire [31:0] s17;
  wire [31:0] s18;
  wire [31:0] s19;
  wire [31:0] s20;
  wire [31:0] s21;
  wire [31:0] s22;
  wire [31:0] s23;
  wire [31:0] s24;
  wire [31:0] s25;
  wire [31:0] s26;
  wire [31:0] s27;
  wire [31:0] s28;
  wire [31:0] s29;
  wire [31:0] s30;
  wire [31:0] s31;
  wire [31:0] s32;
  wire [31:0] s33;
  wire [31:0] s34;
  wire [31:0] s35;
  wire [31:0] s36;
  wire [31:0] s37;
  wire [31:0] s38;
  wire s39;
  wire [31:0] s40;
  assign s0 = (start & clock);
  final_checker_gen0 final_checker_gen0_i0 (
    .C( s0 ),
    .out( s39 )
  );
  // 0
  node_module_gen0 node_module_gen0_i1 (
    .start( V0 ),
    .clock( s0 ),
    .I0( s1 ),
    .I1( s2 ),
    .own( s3 ),
    .O0( s4 ),
    .O1( s5 )
  );
  // 1
  node_module_gen1 node_module_gen1_i2 (
    .start( V1 ),
    .clock( s0 ),
    .I0( s4 ),
    .I1( s6 ),
    .I2( s7 ),
    .own( s8 ),
    .O0( s1 ),
    .O1( s9 ),
    .O2( s10 )
  );
  // 2
  node_module_gen2 node_module_gen2_i3 (
    .start( V2 ),
    .clock( s0 ),
    .I0( s9 ),
    .I1( s11 ),
    .I2( s12 ),
    .I3( s13 ),
    .own( s14 ),
    .O0( s6 ),
    .O1( s15 ),
    .O2( s16 ),
    .O3( s17 )
  );
  // 3
  node_module_gen3 node_module_gen3_i4 (
    .start( V3 ),
    .clock( s0 ),
    .I0( s15 ),
    .I1( s18 ),
    .I2( s19 ),
    .own( s20 ),
    .O0( s11 ),
    .O1( s21 ),
    .O2( s22 )
  );
  // 4
  node_module_gen4 node_module_gen4_i5 (
    .start( V4 ),
    .clock( s0 ),
    .I0( s21 ),
    .I1( s23 ),
    .own( s24 ),
    .O0( s18 ),
    .O1( s25 )
  );
  // 5
  node_module_gen5 node_module_gen5_i6 (
    .start( V5 ),
    .clock( s0 ),
    .I0( s16 ),
    .I1( s22 ),
    .I2( s25 ),
    .I3( s26 ),
    .own( s27 ),
    .O0( s12 ),
    .O1( s19 ),
    .O2( s23 ),
    .O3( s28 )
  );
  // 6
  node_module_gen6 node_module_gen6_i7 (
    .start( V6 ),
    .clock( s0 ),
    .I0( s28 ),
    .I1( s29 ),
    .I2( s30 ),
    .own( s31 ),
    .O0( s32 ),
    .O1( s26 ),
    .O2( s33 )
  );
  // 7
  node_module_gen7 node_module_gen7_i8 (
    .start( V7 ),
    .clock( s0 ),
    .I0( s5 ),
    .I1( s10 ),
    .I2( s33 ),
    .I3( s34 ),
    .own( s35 ),
    .O0( s2 ),
    .O1( s7 ),
    .O2( s36 ),
    .O3( s29 )
  );
  // 8
  node_module_gen8 node_module_gen8_i9 (
    .start( V8 ),
    .clock( s0 ),
    .I0( s17 ),
    .I1( s32 ),
    .I2( s36 ),
    .own( s37 ),
    .O0( s13 ),
    .O1( s30 ),
    .O2( s34 )
  );
  final_finder_gen0 final_finder_gen0_i10 (
    .\end ( VT ),
    .in_0( s3 ),
    .in_1( s8 ),
    .in_2( s14 ),
    .in_3( s20 ),
    .in_4( s24 ),
    .in_5( s27 ),
    .in_6( s31 ),
    .in_7( s35 ),
    .in_8( s37 ),
    .out( s38 )
  );
  DIG_D_FF_Nbit #(
    .Bits(32),
    .Default(0)
  )
  DIG_D_FF_Nbit_i11 (
    .D( s38 ),
    .C( s39 ),
    .Q( SP ),
    .\~Q ( s40 )
  );
endmodule
