<?xml version="1.0" encoding="utf-8"?>
<circuit>
  <version>1</version>
  <attributes>
    <entry>
      <string>isGeneric</string>
      <boolean>true</boolean>
    </entry>
    <entry>
      <string>Height</string>
      <int>7</int>
    </entry>
    <entry>
      <string>Width</string>
      <int>5</int>
    </entry>
  </attributes>
  <visualElements>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>small</string>
          <boolean>true</boolean>
        </entry>
        <entry>
          <string>Label</string>
          <string>start</string>
        </entry>
      </elementAttributes>
      <pos x="460" y="220"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>Label</string>
          <string>own</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>32</int>
        </entry>
      </elementAttributes>
      <pos x="580" y="260"/>
    </visualElement>
    <visualElement>
      <elementName>Clock</elementName>
      <elementAttributes>
        <entry>
          <string>small</string>
          <boolean>true</boolean>
        </entry>
        <entry>
          <string>runRealTime</string>
          <boolean>true</boolean>
        </entry>
        <entry>
          <string>Label</string>
          <string>clock</string>
        </entry>
        <entry>
          <string>Frequency</string>
          <int>50000</int>
        </entry>
      </elementAttributes>
      <pos x="460" y="140"/>
    </visualElement>
    <visualElement>
      <elementName>wires_in.dig</elementName>
      <elementAttributes>
        <entry>
          <string>generic</string>
          <string>in_nodes := args.neighbourhood_size;</string>
        </entry>
      </elementAttributes>
      <pos x="300" y="120"/>
    </visualElement>
    <visualElement>
      <elementName>decreasing_mem.dig</elementName>
      <elementAttributes/>
      <pos x="460" y="140"/>
    </visualElement>
    <visualElement>
      <elementName>wires_out.dig</elementName>
      <elementAttributes>
        <entry>
          <string>generic</string>
          <string>out_nodes := args.neighbourhood_size;
weights := args.edge_weights;</string>
        </entry>
      </elementAttributes>
      <pos x="600" y="160"/>
    </visualElement>
    <visualElement>
      <elementName>GenericInitCode</elementName>
      <elementAttributes>
        <entry>
          <string>generic</string>
          <string>neighbourhood_size:=4;
edge_weights:=[4,8,1,1,1,1];</string>
        </entry>
      </elementAttributes>
      <pos x="260" y="-120"/>
    </visualElement>
    <visualElement>
      <elementName>GenericCode</elementName>
      <elementAttributes>
        <entry>
          <string>generic</string>
          <string>x_output_start := 33;
y_output_start := 8;
y_output_add:= 1;

x_input_start := 15;
y_input_start := 6;
y_input_add:= 1;

y_input_offset:=0;

for (i:=0;i&lt;args.neighbourhood_size;i++){
    output:=addComponent(&quot;Out&quot;,x_output_start,y_output_start+i*y_output_add);
    output.Bits=32;
    output.Label=&quot;O&quot;+i;
}

for (i:=0;i&lt;args.neighbourhood_size;i++){
    if(args.neighbourhood_size%2=0)
    {
	if(i&gt;=args.neighbourhood_size/2){
	   y_input_offset = 1;
	}
    }
    output:=addComponent(&quot;In&quot;,x_input_start,y_input_start+i*y_input_add + y_input_offset);
    output.Bits=32;
    output.Label=&quot;I&quot;+i;
}

addWire(x_input_start+3,y_input_start + args.neighbourhood_size/2,23,8);</string>
        </entry>
      </elementAttributes>
      <pos x="380" y="-940"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>small</string>
          <boolean>true</boolean>
        </entry>
        <entry>
          <string>Label</string>
          <string>clr</string>
        </entry>
      </elementAttributes>
      <pos x="460" y="200"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>clock clr start I0 I1 I2 I3 own O0 O1 O2 O3

############################ Vertex 0 to every other Vertex 

0 1 0 10 10 10 10 2147483647 2147483648 2147483649 2147483651 2147483655 # reset line

C 0 0 10 10 10 10 10 11 12 14 18

C 0 0 10 5 10 10 5 6 7 9 13

C 1 0 10 5 10 10 2147483647 2147483648 2147483649 2147483651 2147483655

C 0 0 50 50 50 50 50 51 52 54 58

C 0 0 50 3 50 50 3 4 5 7 11

C 0 1 50 3 50 50 0 1 2 4 8

C 1 0 50 3 50 50 2147483647 2147483648 2147483649 2147483651 2147483655

C 0 0 50 3 50 50 3 4 5 7 11</dataString>
          </testData>
        </entry>
        <entry>
          <string>generic</string>
          <string>edge_weights := [1,2,4,8];
neighbourhood_size := 4;</string>
        </entry>
      </elementAttributes>
      <pos x="120" y="-60"/>
    </visualElement>
  </visualElements>
  <wires>
    <wire>
      <p1 x="540" y="160"/>
      <p2 x="580" y="160"/>
    </wire>
    <wire>
      <p1 x="580" y="160"/>
      <p2 x="600" y="160"/>
    </wire>
    <wire>
      <p1 x="520" y="180"/>
      <p2 x="540" y="180"/>
    </wire>
    <wire>
      <p1 x="580" y="160"/>
      <p2 x="580" y="260"/>
    </wire>
    <wire>
      <p1 x="540" y="160"/>
      <p2 x="540" y="180"/>
    </wire>
  </wires>
  <measurementOrdering/>
</circuit>