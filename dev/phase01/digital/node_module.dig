<?xml version="1.0" encoding="utf-8"?>
<circuit>
  <version>1</version>
  <attributes>
    <entry>
      <string>isGeneric</string>
      <boolean>true</boolean>
    </entry>
    <entry>
      <string>Height</string>
      <int>7</int>
    </entry>
    <entry>
      <string>Width</string>
      <int>5</int>
    </entry>
  </attributes>
  <visualElements>
    <visualElement>
      <elementName>cheapSelector.dig</elementName>
      <elementAttributes/>
      <pos x="300" y="160"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>start</string>
        </entry>
      </elementAttributes>
      <pos x="60" y="-20"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>Label</string>
          <string>own</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>32</int>
        </entry>
      </elementAttributes>
      <pos x="560" y="260"/>
    </visualElement>
    <visualElement>
      <elementName>Clock</elementName>
      <elementAttributes>
        <entry>
          <string>runRealTime</string>
          <boolean>true</boolean>
        </entry>
        <entry>
          <string>Label</string>
          <string>clock</string>
        </entry>
        <entry>
          <string>Frequency</string>
          <int>50000</int>
        </entry>
      </elementAttributes>
      <pos x="420" y="100"/>
    </visualElement>
    <visualElement>
      <elementName>LookUpTable</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>32</int>
        </entry>
        <entry>
          <string>Data</string>
          <data>7ffffff1</data>
        </entry>
        <entry>
          <string>Inputs</string>
          <int>2</int>
        </entry>
      </elementAttributes>
      <pos x="160" y="20"/>
    </visualElement>
    <visualElement>
      <elementName>wires_in.dig</elementName>
      <elementAttributes>
        <entry>
          <string>generic</string>
          <string>in_nodes := args.neighbourhood_size;</string>
        </entry>
      </elementAttributes>
      <pos x="80" y="120"/>
    </visualElement>
    <visualElement>
      <elementName>decreasing_mem.dig</elementName>
      <elementAttributes/>
      <pos x="460" y="140"/>
    </visualElement>
    <visualElement>
      <elementName>wires_out.dig</elementName>
      <elementAttributes>
        <entry>
          <string>generic</string>
          <string>out_nodes := args.neighbourhood_size;
weights := args.edge_weights;</string>
        </entry>
      </elementAttributes>
      <pos x="600" y="160"/>
    </visualElement>
    <visualElement>
      <elementName>GenericInitCode</elementName>
      <elementAttributes>
        <entry>
          <string>generic</string>
          <string>neighbourhood_size:=6;
edge_weights:=[1,1,1,1,1,1];</string>
        </entry>
      </elementAttributes>
      <pos x="260" y="-120"/>
    </visualElement>
    <visualElement>
      <elementName>GenericCode</elementName>
      <elementAttributes>
        <entry>
          <string>generic</string>
          <string>x_output_start := 33;
y_output_start := 8;
y_output_add:= 1;

x_input_start := 4;
y_input_start := 6;
y_input_add:= 1;

y_input_offset:=0;

for (i:=0;i&lt;args.neighbourhood_size;i++){
    output:=addComponent(&quot;Out&quot;,x_output_start,y_output_start+i*y_output_add);
    output.Bits=32;
    output.Label=&quot;O&quot;+i;
}

for (i:=0;i&lt;args.neighbourhood_size;i++){
    if(args.neighbourhood_size%2=0)
    {
	if(i&gt;=args.neighbourhood_size/2){
	   y_input_offset = 1;
	}
    }
    output:=addComponent(&quot;In&quot;,x_input_start,y_input_start+i*y_input_add + y_input_offset);
    output.Bits=32;
    output.Label=&quot;I&quot;+i;
}

addWire(x_input_start+3,y_input_start + args.neighbourhood_size/2,15,10);</string>
        </entry>
      </elementAttributes>
      <pos x="380" y="-940"/>
    </visualElement>
  </visualElements>
  <wires>
    <wire>
      <p1 x="260" y="160"/>
      <p2 x="300" y="160"/>
    </wire>
    <wire>
      <p1 x="520" y="160"/>
      <p2 x="560" y="160"/>
    </wire>
    <wire>
      <p1 x="560" y="160"/>
      <p2 x="600" y="160"/>
    </wire>
    <wire>
      <p1 x="60" y="-20"/>
      <p2 x="140" y="-20"/>
    </wire>
    <wire>
      <p1 x="420" y="100"/>
      <p2 x="440" y="100"/>
    </wire>
    <wire>
      <p1 x="360" y="180"/>
      <p2 x="460" y="180"/>
    </wire>
    <wire>
      <p1 x="140" y="20"/>
      <p2 x="160" y="20"/>
    </wire>
    <wire>
      <p1 x="220" y="40"/>
      <p2 x="260" y="40"/>
    </wire>
    <wire>
      <p1 x="440" y="140"/>
      <p2 x="460" y="140"/>
    </wire>
    <wire>
      <p1 x="140" y="60"/>
      <p2 x="160" y="60"/>
    </wire>
    <wire>
      <p1 x="560" y="160"/>
      <p2 x="560" y="260"/>
    </wire>
    <wire>
      <p1 x="260" y="40"/>
      <p2 x="260" y="160"/>
    </wire>
    <wire>
      <p1 x="440" y="100"/>
      <p2 x="440" y="140"/>
    </wire>
    <wire>
      <p1 x="140" y="-20"/>
      <p2 x="140" y="20"/>
    </wire>
    <wire>
      <p1 x="140" y="20"/>
      <p2 x="140" y="60"/>
    </wire>
  </wires>
  <measurementOrdering/>
</circuit>